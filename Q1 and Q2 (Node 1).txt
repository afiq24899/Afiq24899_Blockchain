###############################################################
#                          WARNING!!!!                        #
# This is a sandbox environment. Using personal credentials   #
# is HIGHLY! discouraged. Any consequences of doing so are    #
# completely the user's responsibilites.                      #
#                                                             #
# The PWD team.                                               #
###############################################################
[node1] (local) root@192.168.0.8 ~
$ git clone https://github.com/dvf/blockchain
Cloning into 'blockchain'...
remote: Enumerating objects: 301, done.
remote: Total 301 (delta 0), reused 0 (delta 0), pack-reused 301
Receiving objects: 100% (301/301), 108.59 KiB | 3.19 MiB/s, done.
Resolving deltas: 100% (145/145), done.
[node1] (local) root@192.168.0.8 ~
$ cd blockchain
[node1] (local) root@192.168.0.8 ~/blockchain
$ ls
Dockerfile        Pipfile           README.md         csharp            requirements.txt
LICENSE           Pipfile.lock      blockchain.py     js                tests
[node1] (local) root@192.168.0.8 ~/blockchain
$ vi requirements.txt
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker swarm init --advertise-addr $(hostname -i)
Swarm initialized: current node (n61ux5qg7g3sxlel28ty00dt8) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-2y4ew4apnrxila66b28w7c7de59ujqb6xda54qupwge8dffh6s-03aqqlwzqxplsq5fgvmhhfpzt 192.168.0.8:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

[node1] (local) root@192.168.0.8 ~/blockchain
$ ^C
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
n61ux5qg7g3sxlel28ty00dt8 *   node1               Ready               Active              Leader              19.03.4
w0jzuva8906tjw4ivvwizson1     node2               Ready               Active                                  19.03.4
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker image build -t blockchain .
Sending build context to Docker daemon  344.1kB
Step 1/7 : FROM python:3.6-alpine
3.6-alpine: Pulling from library/python
aad63a933944: Pull complete
f229563217f5: Pull complete
bce07ec39263: Pull complete
7fd926f0f7cc: Pull complete
075e2aee5115: Pull complete
Digest: sha256:406e2295248a078fee8ef872640ffd3b534c06fa192cd4e7d37e253665e127ea
Status: Downloaded newer image for python:3.6-alpine
 ---> 5e7f84829665
Step 2/7 : WORKDIR /app
 ---> Running in 44ca97f83389
Removing intermediate container 44ca97f83389
 ---> 59bbeb914619
Step 3/7 : ADD requirements.txt /app
 ---> b57d3615b78a
Step 4/7 : RUN cd /app &&     pip install -r requirements.txt
 ---> Running in 280949cc6f4d
Collecting flask==1.1.1
  Downloading Flask-1.1.1-py2.py3-none-any.whl (94 kB)
Collecting requests==2.23.0
  Downloading requests-2.23.0-py2.py3-none-any.whl (58 kB)
Collecting click>=5.1
  Downloading click-7.1.1-py2.py3-none-any.whl (82 kB)
Collecting Werkzeug>=0.15
  Downloading Werkzeug-1.0.1-py2.py3-none-any.whl (298 kB)
Collecting Jinja2>=2.10.1
  Downloading Jinja2-2.11.1-py2.py3-none-any.whl (126 kB)
Collecting itsdangerous>=0.24
  Downloading itsdangerous-1.1.0-py2.py3-none-any.whl (16 kB)
Collecting urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1
  Downloading urllib3-1.25.8-py2.py3-none-any.whl (125 kB)
Collecting certifi>=2017.4.17
  Downloading certifi-2019.11.28-py2.py3-none-any.whl (156 kB)
Collecting idna<3,>=2.5
  Downloading idna-2.9-py2.py3-none-any.whl (58 kB)
Collecting chardet<4,>=3.0.2
  Downloading chardet-3.0.4-py2.py3-none-any.whl (133 kB)
Collecting MarkupSafe>=0.23
  Downloading MarkupSafe-1.1.1.tar.gz (19 kB)
Building wheels for collected packages: MarkupSafe
  Building wheel for MarkupSafe (setup.py): started
  Building wheel for MarkupSafe (setup.py): finished with status 'done'
  Created wheel for MarkupSafe: filename=MarkupSafe-1.1.1-py3-none-any.whl size=12629 sha256=5393318cc7bff088f31f06892c56edf2c8b5dfa4e7d2e8bfb56cafc58a08b6bb
  Stored in directory: /root/.cache/pip/wheels/ca/85/2f/4c3a8ca6fb5eec7b43ec1e5666c7274dcdb86d6c32231aaa9d
Successfully built MarkupSafe
Installing collected packages: click, Werkzeug, MarkupSafe, Jinja2, itsdangerous, flask, urllib3, certifi, idna, chardet, requests
Successfully installed Jinja2-2.11.1 MarkupSafe-1.1.1 Werkzeug-1.0.1 certifi-2019.11.28 chardet-3.0.4 click-7.1.1 flask-1.1.1 idna-2.9 itsdangerous-1.1.0 requests-2.23.0 urllib3-1.25.8
Removing intermediate container 280949cc6f4d
 ---> 80db6019d4b6
Step 5/7 : ADD blockchain.py /app
 ---> b5d52e8f34b9
Step 6/7 : EXPOSE 5000
 ---> Running in ad4bab16f714
Removing intermediate container ad4bab16f714
 ---> b37df9cd3807
Step 7/7 : CMD ["python", "blockchain.py", "--port", "5000"]
 ---> Running in a9600fd6a7c6
Removing intermediate container a9600fd6a7c6
 ---> 2a7ee0bc2261
Successfully built 2a7ee0bc2261
Successfully tagged blockchain:latest
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker image ls
REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE
blockchain          latest              2a7ee0bc2261        About a minute ago   106MB
python              3.6-alpine          5e7f84829665        11 days ago          92.5MB
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker run -d -p 80:5000 blockchain
449ae409359d76bc5fde61845515b0de37d53ad46270c45046e18bd2cbd110c6
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker container ls -all
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
449ae409359d        blockchain          "python blockchain.pâ€¦"   19 seconds ago      Up 18 seconds       0.0.0.0:80->5000/tcp   cranky_leakey
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker service create --name cranky_leakey blockchain:latest
image blockchain:latest could not be accessed on a registry to record
its digest. Each node will access blockchain:latest independently,
possibly leading to different nodes running different
versions of the image.

6aws79o16398ax0wm5pxp1tr2
overall progress: 1 out of 1 tasks
1/1: running   [==================================================>]
verify: Service converged
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker service create --name modest_goldwasser  blockchain:latest
image blockchain:latest could not be accessed on a registry to record
its digest. Each node will access blockchain:latest independently,
possibly leading to different nodes running different
versions of the image.

6hwty1lfc8l8ev9q6utfhq3zp
overall progress: 1 out of 1 tasks
1/1: running   [==================================================>]
verify: Service converged
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
6aws79o16398        cranky_leakey       replicated          1/1                 blockchain:latest
6hwty1lfc8l8        modest_goldwasser   replicated          1/1                 blockchain:latest
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker service scale cranky_leakey=3
cranky_leakey scaled to 3
overall progress: 3 out of 3 tasks
1/3: running   [==================================================>]
2/3: running   [==================================================>]
3/3: running   [==================================================>]
verify: Service converged
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker service scale modest_goldwasser=3
modest_goldwasser scaled to 3
overall progress: 3 out of 3 tasks
1/3: running   [==================================================>]
2/3: running   [==================================================>]
3/3: running   [==================================================>]
verify: Service converged
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker service ps cranky_leakey
ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE            ERROR               PORTS
rbq0la0bi7gl        cranky_leakey.1     blockchain:latest   node1               Running             Running 2 minutes ago
md23vl4w1nau        cranky_leakey.2     blockchain:latest   node1               Running             Running 52 seconds ago
xcmawa7wdlam        cranky_leakey.3     blockchain:latest   node2               Running             Running 52 seconds ago
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker service ps modest_goldwasser
ID                  NAME                  IMAGE               NODE                DESIRED STATE       CURRENT STATE            ERROR               PORTS
qw2pbwgdzjpf        modest_goldwasser.1   blockchain:latest   node2               Running             Running 2 minutes ago
8rdco1el3gn9        modest_goldwasser.2   blockchain:latest   node2               Running             Running 45 seconds ago
ejb4vwtkglqj        modest_goldwasser.3   blockchain:latest   node1               Running             Running 45 seconds ago
[node1] (local) root@192.168.0.8 ~/blockchain
$ docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
6aws79o16398        cranky_leakey       replicated          3/3                 blockchain:latest
6hwty1lfc8l8        modest_goldwasser   replicated          3/3                 blockchain:latest
[node1] (local) root@192.168.0.8 ~/blockchain
$